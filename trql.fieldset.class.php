<?php
/****************************************************************************************/
/*
    {PYB} is a shortcut for Patrick Boens

    {COMPANY} is a shortcut to "Lato Sensu Management"

    {RIGHTS} is a shortcut used by trql.documentor.class.php. In general the material
    presented here is available under the conditions of
    https://creativecommons.org/licenses/by-sa/4.0/

    Other shortcuts exist. They exist to make it simple to change the formulation
    of parts that can vary over time.

    It does not change the undisputed truth that ALL code has been created by
    Patrick Boens, the author, who owns ALL the intellectual property of what
    he created.

    The code of this class has been generated by

*/

/** {{{*fheader
    {*file                  trql.fieldset.class.php *}
    {*purpose               <fieldset> | fieldset element *}
    {*author                {PYB} *}
    {*company               {COMPANY} *}
    {*cdate                 25-12-20 12:51 *}
    {*mdate                 auto *}
    {*license               {RIGHTS} *}

    -------------------------------------------------------------------------------------
    Changes History:
    -------------------------------------------------------------------------------------

    {*chist
        {*mdate 31-12-20 09:46 *}
        {*author {PYB} *}
        {*v 8.0.0000 *}
        {*desc              1)  Original creation
        *}
    *}

    *}}} */
/****************************************************************************************/
namespace trql\fieldset;

use \trql\vaesoli\Vaesoli               as Vaesoli;
use \trql\tag\Tag                       as Tag;
use \trql\XML\XML                       as XML;

if ( ! defined( 'VAESOLI_CLASS_VERSION' ) )
    require_once( 'trql.vaesoli.class.php' );

if ( ! defined( 'TAG_CLASS_VERSION' ) )
    require_once( 'trql.tag.class.php' );

if ( ! defined( 'XML_CLASS_VERSION' ) )
    require_once( 'trql.xml.class.php' );

defined( 'FIELDSET_CLASS_VERSION' ) or define( 'FIELDSET_CLASS_VERSION','0.1' );

/* ==================================================================================== */
/** {{*class Fieldset=

    {*desc

        <fieldset> | fieldset element

    *}

    {*remark

        31-12-20 09:47:33: most of the implementation comes from
        D:\websites\vaesoli.org\www\httpdocs\vaesoli\include\LSFieldset.class.php

    *}

 */
/* ==================================================================================== */
class Fieldset extends Tag
/*----------------------*/
{
    protected   $self = array( 'file'   => __FILE__     ,           /* {*property   $self               (array)         Fixed 'class' information. *} */
                               'class'  => __CLASS__    ,
                               'name'   => null         ,
                               'birth'  => null         ,
                               'home'   => null         ,
                               'family' => null         ,
                               'UIKey'  => null         ,
                             );

    public      $aItems             = null;                         /* {*property   $aItems             (array)         Array of elements composing the form *} */
    public      $aAccepted          = null;                         /* {*property   $aAccepted          (array)         Array of inner tags that are accepted in a form *} */
    public      $szCaption          =   null;                       /* {*property   $szCaption          (string)        Caption of the fieldset *} */
    public      $aECMA              =   array();                    /* {*property   $aECMA              (array)         Array of ECMA scripts to be generated by Vae Soli! *} */

    public      $settings                       = array( 'preRenderFnc'         => null             ,
                                                         'postRenderFnc'        => null             ,
                                                         'disabled'             => false            ,
                                                       );
                                                                    /* {*property   $settings           (array)         Associative array with ALL settings used in the fieldset:[br]

                                                                                                                        - [c]preRenderFnc[/c]       (string)            : Callback to play before rendering of the form[br]
                                                                                                                        - [c]postRenderFnc[/c]      (string)            : Callback to play after rendering of the form[br]
                                                                                                                        - [c]disabled[/c]           (bool)              : If this Boolean attribute is set, all form controls 
                                                                                                                                                                          that are descendants of the <fieldset>, are disabled, 
                                                                                                                                                                          meaning they are not editable and won't be submitted 
                                                                                                                                                                          along with the <form>. They won't receive any 
                                                                                                                                                                          browsing events, like mouse clicks or focus-related 
                                                                                                                                                                          events. By default browsers display such controls 
                                                                                                                                                                          grayed out. Note that form elements inside the 
                                                                                                                                                                          <legend> element won't be disabled.[br]
                                                                                                                        *} */


    /* === [Properties NOT defined in schema.org] ===================================== */
    public      $wikidataId         = 'Q94100427';                  /* {*property   $wikidataId         (string)        Wikidata ID. <fieldset> | fieldset element *} */


    /* ================================================================================ */
    /** {{*__construct( [$szHome] )=

        Class constructor

        {*params
            $szHome     (string)        Home of the class. Optional.
        *}

        {*return
            (self)      The current instance of the class
        *}

        *}}
    */
    /* ================================================================================ */
    public function __construct( $szHome = null )
    /*-----------------------------------------*/
    {
        parent::__construct();

        $this->updateSelf( __CLASS__,'/q/common/trql.classes.home/' . basename( __FILE__,'.php' ) );

        $this->aAccepted['button'  ] =
        $this->aAccepted['div'     ] =
        $this->aAccepted['input'   ] =
        $this->aAccepted['label'   ] =
        $this->aAccepted['ol'      ] =
        $this->aAccepted['p'       ] =
        $this->aAccepted['select'  ] =
        $this->aAccepted['textarea'] =
        $this->aAccepted['ul'      ] = true;

        return ( $this );
    }   /* End of Fieldset.__construct() ============================================== */
    /* ================================================================================ */


    public function add( $oItem )
    /*-------------------------*/
    {
        $bRetVal = false;

        /* Si c'est un tag comme on les supporte */
        if ( $oItem instanceof Tag )
        {
            /* Et si c'est un tag d'un type qu'on peut accepter */
            if ( isset( $this->aAccepted[ $oItem->szType ] ) )
            {
                /*
                    $this->aItems[] = array( "class" => get_class( $oItem ) ,
                                             "item"  => $oItem              ,
                                           );
                */
                $this->aItems[] = $oItem;

                $bRetVal = true;
            }   /* if ( isset( $this->aAccepted[ $oItem->szType ] ) ) */
            else
            {
                // Throw exception
                var_dump( "Item NOT accepted" );
            }
        }   /* if ( $oItem instanceof Tag ) */
        else
        {
            var_dump( "Item NOT a Tag",$oItem );
        }

        return ( $bRetVal );
    }   /* End of Fieldset.add() ====================================================== */
    /* ================================================================================ */


    /* ================================================================================ */
    /** {{*render( [$szType] )=

        Renders the fieldset

        {*params
            $szType         (string)        Output type. Optional. 'HTML' by default.
        *}

        {*return
            (string)        HTML Code
        *}

        {*warning

        *}

        *}}
    */
    /* ================================================================================ */
    public function render( $szType = 'html' ): string
    /*----------------------------------------------*/
    {
        $szRetVal = '';

        switch( strtolower( trim( $szType ) ) )
        {
            case 'xml'  :   $szRetVal = $this->__toXML();
                            break;
            case 'html' :
            default     :   $szRetVal = $this->__toHTML();
        }   /* switch( strtolower( trim( $szType ) ) ) */

        end:
        return ( $szRetVal );
    }   /* End of Fieldset.render() =================================================== */
    /* ================================================================================ */


    /* ================================================================================ */
    /** {{*__toHTML()=

        Renders the form in HTML

        {*params
        *}

        {*return
            (string)        HTML Code
        *}

        {*warning
            So far (25-12-20 13:29:10), the form is NOT rendered
        *}

        *}}
    */
    /* ================================================================================ */
    public function __toHTML(): string
    /*------------------------------*/
    {
        $szRetVal  = '';

        /* **************************************************************************** */
        /* Play the pre block if any                                                    */
        /* **************************************************************************** */
        if ( ! is_null(         $this->settings['preRenderFnc'] )     &&
               is_string(       $this->settings['preRenderFnc'] )     &&
               strlen(          $this->settings['preRenderFnc'] ) > 0 &&
               function_exists( $this->settings['preRenderFnc'] )
           )
        {
            $szRetVal .= (string) $this->settings['preRenderFnc']( $this );
        }   /* if ( ! is_null( $this->PreRenderFnc   )  && ... */
        /* **************************************************************************** */
        /* End of Play the pre block if any                                             */
        /* **************************************************************************** */




        /* **************************************************************************** */
        /* Adding description and comment                                               */
        /* **************************************************************************** */
        if ( ! empty( $this->description ) )
            $szRetVal .= "<!-- Description: " . wordwrap( $this->description,80 ) . " -->\n";

        if ( ! empty( $this->comment ) )
            $szRetVal .= "<!-- Comment: " . wordwrap( $this->comment,80 ) . " -->\n";

        $szRetVal .= "<!-- Generation: " . __CLASS__ . " on " . date( "d/m/Y H:i:s" ) . " -->\n";

        /* **************************************************************************** */
        /* End of Adding description and comment                                        */
        /* **************************************************************************** */



        $szID           = $this->buildID();                         /* 'id' attribute */
        $szClass        = $this->buildClass();                      /* 'class' attribute */


        $szRetVal .= "<fieldset{$szID}{$szClass}>\n";

        if ( ! empty( $this->szCaption ) )
            $szRetVal .= "<legend>{$this->szCaption}</legend>\n";

        if ( is_array( $this->aItems ) && count( $this->aItems ) > 0 )
        {
            foreach( $this->aItems as $oItem )
            {
                if ( $oItem instanceof Tag )
                {
                    $szRetVal .= $oItem->__toHTML();
                }   /* if ( $oItem instanceof Tag ) */
            }   /* foreach( $this->aItems as $oItem ) */
        }   /* if ( is_array( $this->aItems ) && count( $this->aItems ) > 0 ) */

        end:
        $szRetVal .= "</fieldset>\n";







        /* **************************************************************************** */
        /* Play the post block if any                                                   */
        /* **************************************************************************** */
        if ( ! is_null(         $this->settings['postRenderFnc'] )     &&
               is_string(       $this->settings['postRenderFnc'] )     &&
               strlen(          $this->settings['postRenderFnc'] ) > 0 &&
               function_exists( $this->settings['postRenderFnc'] )
           )
        {
            $szRetVal .= (string) $this->settings['postRenderFnc']( $this );
        }   /* if ( ! is_null( $this->settings['postRenderFnc'] ) && ... */
        /* **************************************************************************** */
        /* End of Play the post block if any                                            */
        /* **************************************************************************** */

        return ( $szRetVal );
    }   /* End of Fieldset.__toHTML() ================================================= */
    /* ================================================================================ */


    /* ================================================================================ */
    /** {{*__toXML()=

        Renders the form in XML

        {*params
        *}

        {*return
            (string)        XML Code
        *}

        {*warning
            So far (25-12-20 13:29:10), the form is NOT rendered
        *}

        *}}
    */
    /* ================================================================================ */
    public function __toXML(): string
    /*-----------------------------*/
    {
        static $oXML = null;
        $szRetVal = null;


        if ( is_null( $oXML ) )
            $oXML = new XML();

        $oDom                       = new \DOMDocument( '1.0' );

        $oDom->preserveWhiteSpace   = true;
        $oDom->formatOutput         = true;

        if ( $oDom->loadXML( $oXML->__toXML( $this ) ) )
            $szRetVal = $oDom->saveXML();

        end:
        return ( $szRetVal );
    }   /* End of Fieldset.__toXML() ================================================== */
    /* ================================================================================ */


    /* ================================================================================ */
    /** {{*__toArray()=

        Turns the object into an array

        {*params
        *}

        {*return
            (array)     The array corresponding to the object
        *}

        {*remark
            Protected properties are formatted as: [c]'&#0;*&#0;<property>'[/c] (e.g. [c]'&#0;*&#0;self'[/c])[br]
            Private   properties are formatted as: [c]'&#0;trql\form\Form&#0;<property>'[/c] (e.g. [c]'&#0;trql\form\Form&#0;test'[/c])[br]
        *}

        *}}
    */
    /* ================================================================================ */
    public function __toArray(): array
    /*------------------------------*/
    {
        return ( (array) $this );
    }   /* End of Fieldset.__toArray() ================================================ */
    /* ================================================================================ */


    /* ================================================================================ */
    /** {{*__toString()=

        Renders the form in HTML

        {*params
        *}

        {*return
            (string)        XML Code
        *}

        *}}
    */
    /* ================================================================================ */
    public function __toString(): string
    /*--------------------------------*/
    {
        return ( $this->__toHTML() );
    }   /* End of Fieldset.__toString() =============================================== */
    /* ================================================================================ */




    /* ================================================================================ */
    /** {{*__destruct()=

        Class destructor

        {*params
        *}

        {*return
            (void)      No return
        *}

        *}}
    */
    /* ================================================================================ */
    public function __destruct()
    /*------------------------*/
    {
        $this->backup();
        $this->autodoc();
        $this->UIKey();
        $this->WikiData();
        $this->necroSignaling();

    }   /* End of Fieldset.__destruct() =============================================== */
    /* ================================================================================ */

}   /* End of class Fieldset ========================================================== */
/* ==================================================================================== */

?>